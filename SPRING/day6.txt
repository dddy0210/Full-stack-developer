정규표 형식
이메일 형식
주민번호 형식

문자열에서 특정 내용을 찾거나 대체 또는 발췌하는데 사용한다.

cons regex =/패턴/
let phone ="010-1111-1111"
regex.test(phone)
문자열이 정규표현식과 매칭되면 true 아니면 false 반환

a-z 소문자 a부터 z까지
A-Z 대문자 A부터 Z까지

a-zA-Z 소문자 a부터 대문자 Z까지

ㄱ.ㅎ가-힣 한글 문자 범위 

정규식 검색 기준 패턴
|:or
[]:괄호안의 문자들중 하나 또는 묶음 [abc]->"a"또는 b또는 c를 포함하는
[다-바] : 다 or 라 or 마 or 바

[^문자]:괄호안의 문자를 제외한 것 [^lgen]->l,g,e,n문자를 제외한것
 
localhost3000-> localhost:5000/todo 토큰이 없으니까 403이 떠야함

스프링 시큐리티가 자기마음대로 리다이렉트해버림

우리가 원하는 것
403이 떠서 로그인 화면으로 가고싶음

로그인 화면에서 이메일로 로그인할지 소셜로그인할지 고를 수 잇도록 하고싶음

exceptionHandling()
시큐리티에서 발생하는 예외상황, 예를들어 인증되지 않은 사용자가 자원에 접근하려고 할
때 어떤 동작을 할지 정의할 수 있다. 

authenticationEntryPoint(new Http403ForbiddenEntryPoint())
인증이 필요한 자원에 대해 인증되지 않은 사용자가 접근 할 때 403응답을 반환하도록 설정 

authorizationEndpoint()
OAuth2 인증의 흐름에서 권한 부여 앤드포인트를 설정하기 위한 것
OAuth2에서 클라이언트 애플리케이션이 사용자를 대신해 구너한을 요청할 때 사용되는
앤드포인트가 권한 부여 앤드포인트이다. 
사용자는 이 앤드포인트로 리다이렉션되어 권한을 승인하는 과정을 거친다. 
baseUri("/auth/authorize")
OAuth2 권한 부여 요청을 처리하는 앤드포인트의 기본 URI를 설정하는 것이다. 
즉,  어플리케이션은 사용자가 로그인을 시도 할 때 이 앤드포인트를 통해 OAuth2권한 요청을
수행한다. 

프로덕션 환경에 배포했을 때 OAuth 2.0흐름으로 생성한 토큰은 localhost:3000으로 
리다이렉트된다.

따라서 프론트엔드는 백엔드에게 '인증이 끝나면 여기로 돌려줘'라고 알려줘야함 
백엔드에서는 프론트엔드가 지정한 경로로 리다이렉트 해야함 

1.쿠키 -발급을 해주고 클라이언트에 저장
2.세션 -서버족에 저장을 함 


provider+"?redirect_url="window.location.origin











